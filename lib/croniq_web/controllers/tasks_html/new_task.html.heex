<%!--
The MIT License (MIT).

Copyright (c) 2025 Almaz Ilaletdinov <a.ilaletdinov@yandex.ru>

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
OR OTHER DEALINGS IN THE SOFTWARE.
--%>

<div class="max-w-2xl mx-auto p-6">
  <h1 class="text-2xl font-bold mb-6">Create New Task</h1>

  <.form
    :let={f}
    for={@changeset}
    action={~p"/tasks"}
    method="post"
    class="space-y-6 bg-white p-6 rounded-lg shadow-md border border-gray-200"
  >
    <div class="space-y-6">
      <!-- Task Type Selection -->
      <div>
        <label class="block text-sm font-medium text-gray-700 mb-2">Task Type</label>
        <div class="flex space-x-4">
          <label class="flex items-center">
            <input type="radio" name="task[task_type]" value="recurring" checked class="mr-2" />
            <span>Recurring Task</span>
          </label>
          <label class="flex items-center">
            <input type="radio" name="task[task_type]" value="delayed" class="mr-2" />
            <span>Delayed Task</span>
          </label>
        </div>
      </div>
      
<!-- Common Fields -->
      <div>
        <label class="block text-gray-700 mb-1">Task Name*</label>
        <.input
          type="text"
          field={f[:name]}
          class="w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500"
          required
        />
      </div>

      <div>
        <label class="block text-gray-700 mb-1">Status</label>
        <.input
          field={f[:status]}
          type="select"
          options={[{"Enabled", "active"}, {"Disabled", "disabled"}]}
          class="w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500"
        />
      </div>

      <div>
        <label class="block text-gray-700 mb-1">URL*</label>
        <.input
          type="url"
          field={f[:url]}
          placeholder="https://api.example.com/endpoint"
          class="w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500"
          required
        />
      </div>

      <div>
        <.input
          field={f[:method]}
          type="select"
          label="HTTP Method*"
          options={["GET", "POST", "PUT", "DELETE"]}
          class="w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500"
          required
        />
      </div>

      <div>
        <.input
          field={
            %{
              f[:headers]
              | value:
                  if(is_map(f[:headers].value),
                    do: Jason.encode!(f[:headers].value),
                    else: f[:headers].value
                  )
            }
          }
          type="textarea"
          label="Headers (JSON)"
          class="w-full px-3 py-2 border rounded-lg font-mono h-20 focus:ring-2 focus:ring-blue-500"
          placeholder='{"Content-Type": "application/json", "Authorization": "Basic token"}'
        />
      </div>

      <div>
        <.input
          field={f[:request_body]}
          type="textarea"
          label="Request Body"
          class="w-full px-3 py-2 border rounded-lg font-mono h-20 focus:ring-2 focus:ring-blue-500"
          placeholder='{"key": "value"}'
          data-test="request-body-input"
          value={Jason.encode_to_iodata!(f[:headers].value || %{})}
        />
      </div>
      
<!-- Conditional Fields -->
      <div id="recurring-fields" class="space-y-4">
        <div>
          <.input
            field={f[:schedule]}
            type="text"
            label="Cron Schedule"
            placeholder="*/5 * * * *"
          />
        </div>
      </div>

      <div id="delayed-fields" class="space-y-4" style="display: none;">
        <div>
          <.input field={f[:scheduled_at]} type="datetime-local" label="Execute At" />
        </div>
      </div>

      <div class="flex justify-end space-x-4 pt-4">
        <.link
          href={~p"/tasks"}
          class="px-4 py-2 border rounded-lg text-gray-700 hover:bg-gray-50"
        >
          Cancel
        </.link>
        <button
          type="submit"
          class="bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-lg"
        >
          Create Task
        </button>
      </div>
    </div>
  </.form>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const taskTypeInputs = document.querySelectorAll('input[name="task[task_type]"]');
    const recurringFields = document.getElementById('recurring-fields');
    const delayedFields = document.getElementById('delayed-fields');

    function toggleFields() {
      const selectedType = document.querySelector('input[name="task[task_type]"]:checked').value;
      
      if (selectedType === 'recurring') {
        recurringFields.style.display = 'block';
        delayedFields.style.display = 'none';
      } else {
        recurringFields.style.display = 'none';
        delayedFields.style.display = 'block';
      }
    }

    taskTypeInputs.forEach(input => {
      input.addEventListener('change', toggleFields);
    });

    // Initialize on page load
    toggleFields();
  });
</script>
